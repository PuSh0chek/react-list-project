{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Desktop\\\\react\\\\00-test-my-ability\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Post from './Post';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState(new Array(10).fill(null));\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(json => setPosts(json)).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  }, []);\n  const [show, setShow] = useState(null);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  // const deletePost = () => {\n  //     const filteredPosts = posts.filter((item) => item.show === true)\n  //     setPosts(filteredPosts)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"preview\",\n      children: \"Post list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"post-list\",\n      children: posts.map(({\n        id,\n        title,\n        body\n      }) => /*#__PURE__*/_jsxDEV(Post, {\n        isShow: true,\n        id: id,\n        title: title,\n        body: body\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"CjRQAA3X2AmdMd3g9eY2Jw09tXs=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","Array","fill","error","setError","isLoading","setIsLoading","API_URL","fetch","then","response","json","catch","message","finally","show","setShow","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","id","title","body","isShow","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Desktop/react/00-test-my-ability/src/components/posts/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Post from './Post'\r\nimport './Post.css'\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState(new Array(10).fill(null))\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const API_URL = 'https://jsonplaceholder.typicode.com/posts'\r\n    useEffect(() => {\r\n        fetch(API_URL)\r\n            .then((response) => response.json())\r\n            .then((json) => setPosts(json))\r\n            .catch((error) => setError(error.message))\r\n            .finally(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    const [show, setShow] = useState(null)\r\n\r\n    if (error) {\r\n        return <h2>{error}</h2>\r\n    }\r\n\r\n    // const deletePost = () => {\r\n    //     const filteredPosts = posts.filter((item) => item.show === true)\r\n    //     setPosts(filteredPosts)\r\n    // }\r\n\r\n    return (\r\n        <section>\r\n            <h1 className=\"preview\">Post list</h1>\r\n            {isLoading ? (\r\n                <h2>Loading...</h2>\r\n            ) : (\r\n                <ul className=\"post-list\">\r\n                    {posts.map(({ id, title, body }) => (\r\n                        <Post\r\n                            isShow={true}\r\n                            key={id}\r\n                            id={id}\r\n                            title={title}\r\n                            body={body}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMc,OAAO,GAAG,4CAA4C;EAC5Df,SAAS,CAAC,MAAM;IACZgB,KAAK,CAACD,OAAO,CAAC,CACTE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKX,QAAQ,CAACW,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAET,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC,CAAC,CACzCC,OAAO,CAAC,MAAMR,YAAY,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEtC,IAAIU,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAqB,QAAA,EAAKd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;;EAEA;EACA;EACA;EACA;;EAEA,oBACIzB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAI0B,SAAS,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrChB,SAAS,gBACNT,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnBzB,OAAA;MAAI0B,SAAS,EAAC,WAAW;MAAAL,QAAA,EACpBlB,KAAK,CAACwB,GAAG,CAAC,CAAC;QAAEC,EAAE;QAAEC,KAAK;QAAEC;MAAK,CAAC,kBAC3B9B,OAAA,CAACF,IAAI;QACDiC,MAAM,EAAE,IAAK;QAEbH,EAAE,EAAEA,EAAG;QACPC,KAAK,EAAEA,KAAM;QACbC,IAAI,EAAEA;MAAK,GAHNF,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAACvB,EAAA,CA5CQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA8Cd,eAAeA,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Desktop\\\\react\\\\00-test-my-ability\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Post from './Post';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n  useEffect(() => {\n    JSON.parse(localStorage.getItem('postsList')).then(response => response.json()).then(json => setPosts(json)).catch(error => setError(error.message)).finally(() => setIsLoading(false)) || fetch(API_URL).then(response => response.json()).then(json => setPosts(json)).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n  const deletePost = index => {\n    const postsListAfterRemove = [...posts];\n    postsListAfterRemove.splice(index, 1);\n    setPosts(postsListAfterRemove);\n    localStorage.setItem('postsList', JSON.stringify(postsListAfterRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"preview\",\n      children: \"Post list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"post-list\",\n      children: posts.map(({\n        id,\n        title,\n        body,\n        userId\n      }, index) => id < 10 && /*#__PURE__*/_jsxDEV(Post, {\n        id: id,\n        title: title,\n        body: body,\n        userId: userId,\n        deletePost: () => deletePost(index)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"g1JdojJUMgUohOXQtGerBHDktIo=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","error","setError","isLoading","setIsLoading","API_URL","JSON","parse","localStorage","getItem","then","response","json","catch","message","finally","fetch","children","fileName","_jsxFileName","lineNumber","columnNumber","deletePost","index","postsListAfterRemove","splice","setItem","stringify","className","map","id","title","body","userId","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Desktop/react/00-test-my-ability/src/components/posts/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Post from './Post'\r\nimport './Post.css'\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const API_URL = 'https://jsonplaceholder.typicode.com/posts'\r\n    useEffect(() => {\r\n        JSON.parse(localStorage.getItem('postsList'))\r\n            .then((response) => response.json())\r\n            .then((json) => setPosts(json))\r\n            .catch((error) => setError(error.message))\r\n            .finally(() => setIsLoading(false)) ||\r\n            fetch(API_URL)\r\n                .then((response) => response.json())\r\n                .then((json) => setPosts(json))\r\n                .catch((error) => setError(error.message))\r\n                .finally(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <h2>{error}</h2>\r\n    }\r\n\r\n    const deletePost = (index) => {\r\n        const postsListAfterRemove = [...posts]\r\n        postsListAfterRemove.splice(index, 1)\r\n        setPosts(postsListAfterRemove)\r\n        localStorage.setItem('postsList', JSON.stringify(postsListAfterRemove))\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h1 className=\"preview\">Post list</h1>\r\n            {isLoading ? (\r\n                <h2>Loading...</h2>\r\n            ) : (\r\n                <ul className=\"post-list\">\r\n                    {posts.map(\r\n                        ({ id, title, body, userId }, index) =>\r\n                            id < 10 && (\r\n                                <Post\r\n                                    key={id}\r\n                                    id={id}\r\n                                    title={title}\r\n                                    body={body}\r\n                                    userId={userId}\r\n                                    deletePost={() => deletePost(index)}\r\n                                />\r\n                            )\r\n                    )}\r\n                </ul>\r\n            )}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
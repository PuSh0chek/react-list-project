{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0430\\u043D\\u0434\\u0440\\\\Desktop\\\\react\\\\00-test-my-ability\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Post from './Post';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n  useEffect(() => {\n    fetch(API_URL).then(response => response.json()).then(json => setPosts(json)).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  const deletePost = () => {\n    const filteredPosts = posts.filter(item => item.show === true);\n    setPosts(filteredPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"preview\",\n      children: \"Post list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"post-list\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : posts.map(item => item.id < 10 && /*#__PURE__*/_jsxDEV(Post, {\n        show: true,\n        onClick: deletePost,\n        ...item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"g1JdojJUMgUohOXQtGerBHDktIo=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","Post","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","error","setError","isLoading","setIsLoading","API_URL","fetch","then","response","json","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","deletePost","filteredPosts","filter","item","show","className","map","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Александр/Desktop/react/00-test-my-ability/src/components/posts/Posts.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Post from './Post'\r\nimport './Post.css'\r\nfunction Posts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const API_URL = 'https://jsonplaceholder.typicode.com/posts'\r\n    useEffect(() => {\r\n        fetch(API_URL)\r\n            .then((response) => response.json())\r\n            .then((json) => setPosts(json))\r\n            .catch((error) => setError(error.message))\r\n            .finally(() => setIsLoading(false))\r\n    }, [])\r\n\r\n    if (error) {\r\n        return <h2>{error}</h2>\r\n    }\r\n\r\n    const deletePost = () => {\r\n        const filteredPosts = posts.filter((item) => item.show === true)\r\n        setPosts(filteredPosts)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h1 className=\"preview\">Post list</h1>\r\n            <ul className=\"post-list\">\r\n                {isLoading ? (\r\n                    <h2>Loading...</h2>\r\n                ) : (\r\n                    posts.map(\r\n                        (item) =>\r\n                            item.id < 10 && (\r\n                                <Post\r\n                                    show={true}\r\n                                    key={item.id}\r\n                                    onClick={deletePost}\r\n                                    {...item}\r\n                                />\r\n                            )\r\n                    )\r\n                )}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMY,OAAO,GAAG,4CAA4C;EAC5Db,SAAS,CAAC,MAAM;IACZc,KAAK,CAACD,OAAO,CAAC,CACTE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAET,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC,CAAC,CACzCC,OAAO,CAAC,MAAMR,YAAY,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAiB,QAAA,EAAKZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;EAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,aAAa,GAAGpB,KAAK,CAACqB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAK,IAAI,CAAC;IAChEtB,QAAQ,CAACmB,aAAa,CAAC;EAC3B,CAAC;EAED,oBACIvB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAI2B,SAAS,EAAC,SAAS;MAAAV,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrB,OAAA;MAAI2B,SAAS,EAAC,WAAW;MAAAV,QAAA,EACpBV,SAAS,gBACNP,OAAA;QAAAiB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAEnBlB,KAAK,CAACyB,GAAG,CACJH,IAAI,IACDA,IAAI,CAACI,EAAE,GAAG,EAAE,iBACR7B,OAAA,CAACF,IAAI;QACD4B,IAAI,EAAE,IAAK;QAEXI,OAAO,EAAER,UAAW;QAAA,GAChBG;MAAI,GAFHA,IAAI,CAACI,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CAEb;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB;AAACnB,EAAA,CA5CQD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AA8Cd,eAAeA,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}